<!DOCTYPE html>
<html lang="en">

<!-- Mirrored from kanakku.dreamguystech.com/template-html/form-basic-inputs.html by HTTrack Website Copier/3.x [XR&CO'2014], Tue, 02 Feb 2021 23:21:22 GMT -->

<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0">
	<title>Unemployement Certificate</title>

	<!-- Favicon -->
	<link rel="shortcut icon" href="/public/img/favicon.png">

	<!-- Bootstrap CSS -->
	<link rel="stylesheet" href="/public/css/bootstrap.min.css">

	<!-- Fontawesome CSS -->
	<link rel="stylesheet" href="/public/plugins/fontawesome/css/fontawesome.min.css">
	<link rel="stylesheet" href="/public/plugins/fontawesome/css/all.min.css">

	<!-- Main CSS -->
	<link rel="stylesheet" href="/public/css/style.css">

	<link rel="stylesheet" href="/public/log/vendor/toaster/toaster/build/toastr.css">
	<script src="/public/log/vendor/jquery/jquery-3.2.1.min.js"></script>
	<script src="/public/log/vendor/toaster/toaster/build/toastr.min.js"></script>
	<script src="/public/js/toaster.js"></script>
</head>

<body>

	<!-- Main Wrapper -->
	<div class="main-wrapper">

		<%- include('partial/header'); %>

			<!-- Page Wrapper -->
			<div class="page-wrapper">
				<div class="content container-fluid">

					<!-- Page Header -->
					<div class="page-header">
						<div class="row">
							<div class="col">
								<h3 class="page-title">Unemployement Certificate</h3>
							</div>
						</div>
					</div>
					<!-- /Page Header -->

					<div class="row">
						<div class="col-lg-12">
							<div class="card">
								<div class="card-header">
									<h5 class="card-title">Upload Documents</h5>
									<div style="float: right;">
										<h5 class="card-title">Contact : +91 91509 94655</h5><br>
										<h5 class="card-title">Price : Rs <span id="pricelist">60</span></h5>
									</div>
								</div>
								<div class="card-body">
									<div>
										<div class="form-group row">
											<label class="col-form-label col-md-2">Name</label>
											<div class="col-md-10">
												<input type="text" class="form-control" id="name">
												<div class="invalid-feedback" id="fbname">
													Please provide a valid Name.
												</div>
											</div>
										</div>
										<div class="form-group row">
											<label class="col-form-label col-md-2">Mobile Number</label>
											<div class="col-md-10">
												<input type="text" class="form-control" id="number">
												<div class="invalid-feedback" id="fbnumber">
													Please provide a valid Number.
												</div>
											</div>
										</div>
										<div class="form-group row">
											<label class="col-form-label col-md-2">Email Id</label>
											<div class="col-md-10">
												<input type="email" class="form-control" id="email">
												<div class="invalid-feedback" id="fbemail">
													Please provide a valid Email.
												</div>
											</div>
										</div>

										<div class="form-group row">
											<label class="col-form-label col-md-2">Photo</label>
											<div class="col-md-10">
												<input class="form-control" type="file" id="photo">
												<div class="invalid-feedback" id="fbphoto">
													Please provide a valid Photo.
												</div>
											</div>
										</div>
										<div class="form-group row">
											<label class="col-form-label col-md-2">Any Address Proof</label>
											<div class="col-md-10">
												<input class="form-control" type="file" id="address">
												<div class="invalid-feedback" id="fbaddress">
													Please provide a valid Address.
												</div>
											</div>
										</div>
										<div class="form-group row">
											<label class="col-form-label col-md-2">Educational Qualification
												Proof</label>
											<div class="col-md-10">
												<input class="form-control" type="file" id="education">
												<div class="invalid-feedback" id="fbeducation">
													Please provide a valid Education.
												</div>
											</div>
										</div>
										<div class="form-group row">
											<label class="col-form-label col-md-2">Transfer Certificate</label>
											<div class="col-md-10">
												<input class="form-control" type="file" id="transfer">
												<div class="invalid-feedback" id="fbtransfer">
													Please provide a valid Transfer.
												</div>
											</div>
										</div>
										<div class="form-group row">
											<label class="col-form-label col-md-2">Self-Declaration of Applicant</label>
											<div class="col-md-10">
												<input class="form-control" type="file" id="self">
												<div class="invalid-feedback" id="fbself">
													Please provide a valid Self.
												</div>
											</div>
										</div>
										<div class="form-group row">
											<label class="col-form-label col-md-2">Family Income Certificate</label>
											<div class="col-md-10">
												<input class="form-control" type="file" id="family">
												<div class="invalid-feedback" id="fbfamily">
													Please provide a valid Family.
												</div>
											</div>
										</div>
										<div class="form-group row">
											<label class="col-form-label col-md-2">Employment Card</label>
											<div class="col-md-10">
												<input class="form-control" type="file" id="employment">
												<div class="invalid-feedback" id="fbemployment">
													Please provide a valid Employment.
												</div>
											</div>
										</div>

										<div class="form-group row">
											<label class="col-form-label col-md-2">Others</label>
											<div class="col-md-10">
												<input class="form-control" type="file" id="others" multiple>
											</div>
										</div>
										<div class="form-group row justify-content-center">
											<button type="button" class="btn btn-primary btn-lg"
												id="submitbtn">Submit</button>
										</div>


									</div>
								</div>
							</div>

						</div>
					</div>

				</div>
			</div>
			<!-- /Page Wrapper -->

	</div>
	<!-- /Main Wrapper -->

	<script src="/public/js/main/jquery-3.5.1.min.js"></script>

	<!-- Bootstrap Core JS -->
	<script src="/public/js/main/popper.min.js"></script>
	<script src="/public/js/main/bootstrap.min.js"></script>

	<!-- Feather Icon JS -->
	<script src="/public/js/main/feather.min.js"></script>

	<!-- Slimscroll JS -->
	<script src="/public/plugins/slimscroll/jquery.slimscroll.min.js"></script>

	<!-- Select2 JS -->
	<script src="/public/plugins/select2/js/select2.min.js"></script>

	<!-- Datepicker Core JS -->
	<script src="/public/plugins/moment/moment.min.js"></script>
	<script src="/public/js/main/bootstrap-datetimepicker.min.js"></script>

	<!-- Custom JS -->
	<script src="/public/js/main/script.js"></script>
	<script src="https://www.gstatic.com/firebasejs/8.2.5/firebase.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
	<script src="/public/js/custom/firebase.js"></script>
	<script>
		var db = firebase.firestore()
		var storageRef = firebase.storage().ref();
		var userid = localStorage.getItem("userid")
		document.getElementById("submitbtn").addEventListener("click", async () => {

			var name = document.getElementById("name").value
			var number = document.getElementById("number").value
			var email = document.getElementById("email").value
			var photo = document.getElementById("photo").files[0]
			var address = document.getElementById("address").files[0]
			var education = document.getElementById("education").files[0]
			var transfer = document.getElementById("transfer").files[0]
			var self = document.getElementById("self").files[0]
			var family = document.getElementById("family").files[0]
			var employment = document.getElementById("employment").files[0]
			var others = document.getElementById("others").files[0]
			var emailreg = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/
			if (name == "") {
				document.getElementById("fbname").style.display = "block"
				return false
			} else if (number == "") {
				document.getElementById("fbnumber").style.display = "block"
				return false
			} else if (!emailreg.test(email)) {
				document.getElementById("fbemail").style.display = "block"
				return false
			} else if (photo == undefined) {
				document.getElementById("fbphoto").style.display = "block"
				return false
			} else if (address == undefined) {
				document.getElementById("fbaddress").style.display = "block"
				return false
			} else if (education == undefined) {
				document.getElementById("fbeducation").style.display = "block"
				return false
			} else if (transfer == undefined) {
				document.getElementById("fbtransfer").style.display = "block"
				return false
			} else if (self == undefined) {
				document.getElementById("fbphoto").style.display = "block"
				return false
			} else if (family == undefined) {
				document.getElementById("fbfamily").style.display = "block"
				return false
			} else if (employment == undefined) {
				document.getElementById("fbphoto").style.display = "block"
				return false
			} else {
				toastr["info"]("Please Wait", "File Uploading..");
				document.getElementById("submitbtn").innerHTML = " <span class='spinner-border spinner-border-sm mr-2' role='status'style='padding: 7px;' aria-hidden='true'></span>Please Wait..."


				var walletamount = await myWallet()
				var myref = await myRef()
				var certificatesamount = 60
				var checkwallet = await checkWallet(walletamount, certificatesamount)
				console.log(checkwallet, walletamount)
				if (myref != "") {
					var newcertificatesamount = 63
					if (checkwallet == 1) {
						var photourl = await generateImageUrl("Unemploymentcerificate", "photo", name, photo)
						var addressurl = await generateImageUrl("Unemploymentcerificate", "address", name, address)
						var educationurl = await generateImageUrl("Unemploymentcerificate", "education", name, education)
						var transferurl = await generateImageUrl("Unemploymentcerificate", "transfer", name, transfer)
						var selfurl = await generateImageUrl("Unemploymentcerificate", "self", name, self)
						var familyurl = await generateImageUrl("Unemploymentcerificate", "family", name, family)
						var employmenturl = await generateImageUrl("Unemploymentcerificate", "employment", name, employment)
						if (others != undefined) {
							var othersurl = await generateImageUrl("Unemploymentcerificate", "other", name, others)

						} else {
							othersurl = "none"
						}
						var myinfos = await myinfo()
						var newcertificate = await {
							name: name,
							email: email,
							certificateid: Date.now().toString(),
							number: number,
							appliedname: myinfos.name,
							appliedemail: myinfos.email,
							appliedeno: myinfos.number,
							certificatename: "Unemployment Certificate",
							certificates: `[{"photo":"${photourl}"},{"education":"${educationurl}"},{"address":"${addressurl}"},{"self":"${selfurl}"},{"transfer":"${transferurl}"},{"family":"${familyurl}"},{"employment":"${employmenturl}"},{"others":"${othersurl}"}]`,
							userid: localStorage.getItem("userid"),
						}
						var UnemploymentCertificate = await axios.post("https://api.smartwayonline.in/certificate/Unemploymentcerificate", newcertificate).then((res) => { return res }).catch((err) => { if (err) return false })
						if (UnemploymentCertificate.data == true) {
							var walletamount = await myWallet()
							var updatewallet = await updaterefWallet(walletamount, "Unemploymentcertificate", newcertificatesamount)
							if (updatewallet == true) {
								toastr["success"]("Certificate Uploaded");
								setTimeout(() => { window.location.reload() }, 2000)
							} else {
								toastr["error"]("Something Wrong Contact Smartway");
								setTimeout(() => { window.location.reload() }, 2000)
							}
						}


					} else {
						toastr["error"]("Low Balance", "Please Add Money..");
						setTimeout(() => { window.location.replace("/payment/addpayments") }, 2000)
					}
				}
				else {
					if (checkwallet == 1) {
						var photourl = await generateImageUrl("Unemploymentcerificate", "photo", name, photo)
						var addressurl = await generateImageUrl("Unemploymentcerificate", "address", name, address)
						var educationurl = await generateImageUrl("Unemploymentcerificate", "education", name, education)
						var transferurl = await generateImageUrl("Unemploymentcerificate", "transfer", name, transfer)
						var selfurl = await generateImageUrl("Unemploymentcerificate", "self", name, self)
						var familyurl = await generateImageUrl("Unemploymentcerificate", "family", name, family)
						var employmenturl = await generateImageUrl("Unemploymentcerificate", "employment", name, employment)
						if (others != undefined) {
							var othersurl = await generateImageUrl("Unemploymentcerificate", "other", name, others)

						} else {
							othersurl = "none"
						}
						var myinfos = await myinfo()
						var newcertificate = await {
							name: name,
							email: email,
							certificateid: Date.now().toString(),
							number: number,
							appliedname: myinfos.name,
							appliedemail: myinfos.email,
							appliedeno: myinfos.number,
							certificatename: "Unemployment Certificate",
							certificates: `[{"photo":"${photourl}"},{"education":"${educationurl}"},{"address":"${addressurl}"},{"self":"${selfurl}"},{"transfer":"${transferurl}"},{"family":"${familyurl}"},{"employment":"${employmenturl}"},{"others":"${othersurl}"}]`,
							userid: localStorage.getItem("userid"),
						}
						var UnemploymentCertificate = await axios.post("https://api.smartwayonline.in/certificate/Unemploymentcerificate", newcertificate).then((res) => { return res }).catch((err) => { if (err) return false })
						if (UnemploymentCertificate.data == true) {
							var walletamount = await myWallet()
							var updatewallet = await updateWallet(walletamount, "UnemploymentCertificate", certificatesamount)
							if (updatewallet == true) {
								toastr["success"]("Certificate Uploaded");
								setTimeout(() => { window.location.reload() }, 2000)
							} else {
								toastr["error"]("Something Wrong Contact Smartway");
								setTimeout(() => { window.location.reload() }, 2000)
							}
						}


					} else {
						toastr["error"]("Low Balance", "Please Add Money..");
						setTimeout(() => { window.location.replace("/payment/addpayments") }, 2000)
					}
				}

			}
		})
		generateImageUrl = async (mycertificatename, mycertificate, name, file) => {
			var extention = file.name.split(".")[1]
			var filename = `${Date.now().toString()}.${extention}`
			var generateImageUrl = new Promise(async (resolve, reject) => {
				var newImage = storageRef.child(`${userid}/${name}/${mycertificatename}/${mycertificate}/` + filename);
				await newImage.put(file).then(function (snapshot) {
					newImage.getDownloadURL().then(function (url) {
						return resolve(url)
					})
						.catch(function (error) {
							console.log("error encountered");
						});
				});
			})
			return await generateImageUrl
		}
		myWallet = async () => {
			var userid = localStorage.getItem("userid");
			if (userid != null) {
				var myinfo = await axios.get(`https://api.smartwayonline.in/user/${userid}`).then((res) => { return res.data }).catch((err) => { return false })
				return myinfo[0].wallet
			}
		}
		myRef = async () => {
			var userid = localStorage.getItem("userid");
			if (userid != null) {
				var myinfo = await axios.get(`https://api.smartwayonline.in/user/${userid}`).then((res) => { return res.data }).catch((err) => { return false })
				return myinfo[0].referral
			}
		}
		myinfo = async () => {
			var userid = localStorage.getItem("userid");
			if (userid != null) {
				var myinfo = await axios.get(`https://api.smartwayonline.in/user/${userid}`).then((res) => { return res.data }).catch((err) => { return false })
				return myinfo[0]
			}
		}
		checkWallet = async (myamount, certificateamount) => {
			if (myamount < certificateamount) {
				return 0
			} else if (myamount == 0) {
				return 0
			} else {
				return 1
			}
		}
		updateWallet = async (myamount, certificatename, certificateamount) => {
			var userid = localStorage.getItem("userid");
			var finalamount = Number(myamount) - Number(certificateamount)
			var update = await axios.put(`https://api.smartwayonline.in/user/${userid}`, { wallet: finalamount }).then((res) => { return res.data }).catch((err) => { return false })
			if (update == false) return toastr["error"]("server Error");
			const createhistory = await axios.post(`https://api.smartwayonline.in/wallethistory/create`, {
				amount: certificateamount,
				certificatename: certificatename,
				userid: userid
			}).then((res) => { return res.data }).catch((err) => { return false })
			if (createhistory == false) return false
			return true
		}
		updaterefWallet = async (myamount, certificatename, newcertificatesamount) => {
			var userid = localStorage.getItem("userid");
			var finalamount = Number(myamount) - Number(newcertificatesamount)
			var update = await axios.put(`https://api.smartwayonline.in/user/${userid}`, { wallet: finalamount }).then((res) => { return res.data }).catch((err) => { return false })
			if (update == false) return toastr["error"]("server Error");
			const createhistory = await axios.post(`https://api.smartwayonline.in/wallethistory/create`, {
				amount: newcertificatesamount,
				certificatename: certificatename,
				userid: userid
			}).then((res) => { return res.data }).catch((err) => { return false })
			if (createhistory == false) return false
			var myref = await myRef()
			var myinfo = await axios.get(`https://api.smartwayonline.in/distributors/ref/${myref}`).then((res) => { return res.data }).catch((err) => { return false })
			var myinfodetails = await axios.get(`https://api.smartwayonline.in/distributors/balance/${myinfo[0].userid}`).then((res) => { return res.data }).catch((err) => { return false })
			var finalamountdes = Number(myinfodetails[0].total_earning) + Number(3)
			var finalamountdesavailable = Number(myinfodetails[0].availabe_earning) + Number(3)
			var updatedes = await axios.put(`https://api.smartwayonline.in/distributors/update/${myinfo[0].userid}`, { total_earning: finalamountdes, availabe_earning: finalamountdesavailable }).then((res) => { return res.data }).catch((err) => { return false })
			return true
		}
		window.onload = async () => {
			var myref = await myRef()
			if (myref != "") {
				document.getElementById("pricelist").innerHTML = "63"
			} else {
				document.getElementById("pricelist").innerHTML = "60"
			}
		}
	</script>

</body>

<!-- Mirrored from kanakku.dreamguystech.com/template-html/form-basic-inputs.html by HTTrack Website Copier/3.x [XR&CO'2014], Tue, 02 Feb 2021 23:21:44 GMT -->

</html>